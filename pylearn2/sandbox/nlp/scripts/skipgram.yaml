!obj:pylearn2.train.Train {
  dataset: !obj:pylearn2.sandbox.nlp.datasets.skipgram.Skipgram {
    path: '/data/lisatmp3/pougetj/double_filtered_binarized_corpus_train.h5',
    node: '/double_filtered_binarized_corpus_train',
    context_distance: &n 3,
    stop: 100000000,
    _iter_num_batches: 1000,
    X_labels: &l 30000,
    cache_size: 1000000,
    cache_delta: 100000
  },
  model: !obj:pylearn2.models.mlp.MLP {
    input_space: !obj:pylearn2.space.IndexSpace {
      dim: 1,
      max_labels: *l  
    },
    layers: [
      !obj:pylearn2.sandbox.nlp.models.mlp.ProjectionLayer {
        layer_name: 'projection',
        dim: 512,
        irange: 0.01
      },
      !obj:pylearn2.sandbox.nlp.models.mlp.Softmax {
        n_classes: *l,
        layer_name: 'h0',
        irange: 0.01,
        binary_target_dim: 1
      },
    ],
  },
  algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
    batch_size: 256,
    learning_rate: .000001,
    learning_rule: !obj:pylearn2.training_algorithms.learning_rule.AdaDelta {},
    monitoring_dataset: {
      'valid': !obj:pylearn2.sandbox.nlp.datasets.skipgram.Skipgram {
        path: '/data/lisatmp3/pougetj/double_filtered_binarized_corpus_valid.h5',
        node: '/double_filtered_binarized_corpus_valid',
        context_distance: *n,
        stop: 100000,
        _iter_num_batches: 350,
        X_labels: *l,
      },
    },
  },
  extensions: [
       !obj:pylearn2.train_extensions.WordRelationship {
         vocab: "/data/lisatmp3/pougetj/vocab.pkl",
         questions: "/data/lisatmp3/pougetj/questions-words.txt",
         vocab_size: *l,
         UNK: 1,
         n_batches: 4, 
       }
  ],
  save_freq: 1,
}